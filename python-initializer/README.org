* Pasta sql_scripts
  Contém arquivos com scripts sql. É esperado que o arquivo
  ~tabela.sql~ contenha os comandos sql necessários para criar uma
  tabela chamada ~tabela~. Preferencialmente, o conteúdo de
  ~tabela.sql~ deve ser apenas uma instrução sql da forma ~CREATE
  TABLE IF NOT EXISTS~.
* Pacote utils
  Contém módulos descrevendo classes para realizar a comunicação com
  os servidores PostGIS e GeoServer. Além disso, há um módulo com uma
  classe gerenciadora que integra a comnnicação com ambos os
  servidores.
* Arquivo Dockerfile
  Define o processo de criação de uma imagem contendo o serviço de inicialização.
* Arquivo requirements.txt
  Lista as bibliotecas python utilizadas no sistema de
  inicialização. Esse arquivo é utilizado principalmente pelo
  Dockerfile, para a correta construção da imagem desse serviço.
* main.py
  Responsável por carregar os módulos do pacote utils, assim como ler
  as variáveis de ambiente, que devem ser determinadas pelo arquivo
  .env, um diretório acima deste. Estabelece conexões com os
  servidores PostGIS e GeoServer, para em seguida construir o
  gerenciador de inicialização com tais conexões. Por fim, o
  gerenciador de inicialização faz a integração inicial dos servidores
  e executa cada script sql na pasta de scripts, por padrão
  ~sql_scripts~.
* postgis_utils.py
** Classe postgis_connection
   - Parâmetros do construtor:
     - ~host~: string contendo IP ou alias para o host do PostGIS;
     - ~port~: string contendo número da porta em que o PostGIS aceita
       conexões;
     - ~database~: string contendo o nome da database em que a conexão
       deve ser realizada;
     - ~user~: string contendo o nome do usuário no servidor PostGIS;
     - ~password~: string contendo a senha do usuário no servidor PostGIS.
   - Métodos:
     - ~execute_statement~:
       - Parâmetros:
         - ~sql_statement~: string contendo comando sql a ser
           executado no banco de dados representado por esta conexão.
       - Comportamento: tenta realizar a execução do comando sql
         recebido. Em caso de falha, reverte o banco de dados para seu
         estado anterior. Em caso de sucesso, retorna uma lista
         contendo os resultados gerados pelo comando sql.
       - Retorno: lista de resultados do comando sql. Em caso de falha
         ou de o comando sql não produzir resultados, a lista será vazia.
     - ~execute_sql_script~:
       - Parâmetros:
         - ~sql_filename~: string contendo o nome do arquivo com
           comandos sql a serem executados no banco de daods
           representado por esta conexão.
       - Comportamento: abre o arquivo ~sql_filename~ e lê seu
         conteúdo, fechando o arquivo em seguida. O conteúdo lido é
         passado como um comando sql para o método.
         ~execute_statement~.
       - Retorno: resultados retornados por ~execute_statement~.
     - ~close~:
       - Parâmetros: nenhum.
       - Comportamento: fecha a conexão mantida por esta classe, isto
         é, após uma chamada deste método, o referido perde sua
         utilidade.
       - Retorno: nenhum.
