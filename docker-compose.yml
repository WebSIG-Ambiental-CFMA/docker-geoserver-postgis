version: "3.3"

services:
   db:
      image: kartoza/postgis:13.0
      environment:
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASS=${POSTGRES_PASS}
         - POSTGRES_DBNAME=${POSTGRES_DBNAME}
         - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      volumes:
         - ./geo-db-data:/var/lib/postgresql
      healthcheck:
         test: "exit 0"
      ports:
         - "${POSTGRES_PORT}:5432"
   geoserver:
      image: kartoza/geoserver:2.18.0
      user: root
      environment:
         - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
         - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
         - STABLE_EXTENSIONS=charts-plugin,db2-plugin
         - SAMPLE_DATA=true
         - DB_BACKEND=POSTGRES
         - HOST=${POSTGRES_HOST}
         - POSTGRES_PORT=${POSTGRES_PORT}
         - POSTGRES_DB=${POSTGRES_DBNAME}
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASS=${POSTGRES_PASS}
      volumes:
         - ./geoserver-data:/opt/geoserver/data_dir
      ports:
         - "${GEOSERVER_PORT}:8080"
      links:
         - "db:${POSTGRES_HOST}"
      depends_on:
         - db
   initializer:
      build: ./python-initializer
      environment:
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASS=${POSTGRES_PASS}
         - POSTGRES_PORT=${POSTGRES_PORT}
         - POSTGRES_HOST=${POSTGRES_HOST}
         - POSTGRES_DBNAME=${POSTGRES_DBNAME}
         - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
         - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
         - GEOSERVER_PORT=${GEOSERVER_PORT}
         - GEOSERVER_HOST=${GEOSERVER_HOST}
         - GEOSERVER_WORKSPACE=${GEOSERVER_WORKSPACE}
         - SQL_SCRIPTS=${SQL_SCRIPTS}
      links:
         - "db:${POSTGRES_HOST}"
         - "geoserver:${GEOSERVER_HOST}"
      depends_on:
        - db
        - geoserver
